name: RJMTM Lambda CI/CD

on:
  push:
    branches:
      - main
    paths-ignore:
      - README.md
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint==2.11.1
        pip install boto3==1.26.54

    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files 'lint.py')
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Deploy to Alpha
        if: contains(github.ref, 'main')
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ALPHA_HOST }}
          username: ${{ secrets.ALPHA_USERNAME }}
          key: ${{ secrets.ALPHA_SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/lambdas/
            touch .env
            echo "${{ secrets.LAMBDA_ENV }}" > .env
            git checkout -f
            git pull

      - name: Deploy to Production
        if: startsWith(github.ref, 'refs/tags/')
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          key: ${{ secrets.PROD_SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/lambdas/
            touch .env
            echo "${{ secrets.LAMBDA_ENV }}" > .env
            php artisan key:generate --force
            git checkout -f
            git pull